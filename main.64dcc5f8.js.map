{"version":3,"sources":["scripts/main.js"],"names":["printMessage","message","box","document","createElement","body","appendChild","className","textContent","waitFor","element","eventName","Promise","resolve","reject","addEventListener","nodeName","id","module","exports"],"mappings":";AAAA,aAEA,IAAMA,EAAe,SAACC,GACdC,IAAAA,EAAMC,SAASC,cAAc,OAEnCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAIK,WAAa,UACjBL,EAAIM,YAAiBP,GAAAA,OAAAA,IAGvB,SAASQ,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAiBJ,EAAW,WAClCX,EAAuBW,UAAAA,OAAAA,EACrBD,4BAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,GADnC,UAMNC,OAAOC,QAAU,CACfV,QAAAA,EACAT,aAAAA","file":"main.64dcc5f8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst printMessage = (message) => {\n  const box = document.createElement('div');\n\n  document.body.appendChild(box);\n  box.className += 'message';\n  box.textContent = `${message}`;\n};\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, () => {\n      printMessage(`It was ${eventName} on the element:\n      ${element.nodeName}, id: ${element.id}.`);\n    });\n  });\n}\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}